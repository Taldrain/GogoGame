# Makefile.in generated by automake 1.9.6 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
subdir = regression
DIST_COMMON = README $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
SCRIPTS = $(noinst_SCRIPTS)
SOURCES =
DIST_SOURCES =
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DFA_ENABLED_FALSE = @DFA_ENABLED_FALSE@
DFA_ENABLED_TRUE = @DFA_ENABLED_TRUE@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
GCC_MAJOR_VERSION = @GCC_MAJOR_VERSION@
GCC_MINOR_VERSION = @GCC_MINOR_VERSION@
GCC_ONLY_FALSE = @GCC_ONLY_FALSE@
GCC_ONLY_TRUE = @GCC_ONLY_TRUE@
GNU_GO_WARNINGS = @GNU_GO_WARNINGS@
GREP = @GREP@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAINTAINER_MODE_FALSE = @MAINTAINER_MODE_FALSE@
MAINTAINER_MODE_TRUE = @MAINTAINER_MODE_TRUE@
MAKEINFO = @MAKEINFO@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
ac_ct_CC = @ac_ct_CC@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build_alias = @build_alias@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
glibconfig = @glibconfig@
host_alias = @host_alias@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
TST = 13x13b.tst 13x13.tst arb.tst arend2.tst arend.tst \
      arion.tst atari_atari.tst auto01.tst auto02.tst \
      auto03.tst auto04.tst auto_handtalk.tst blunder.tst \
      break_in.tst buzco.tst capture.tst century2002.tst \
      connection.tst connect.tst \
      dniwog.tst ego.tst \
      endgame.tst endgame1.tst filllib.tst global.tst \
      golife.tst gunnar.tst handtalk.tst heikki.tst \
      joseki.tst lazarus.tst ld_owl.tst \
      manyfaces1.tst manyfaces.tst nando.tst neurogo.tst \
      newscore.tst nicklas1.tst nicklas2.tst nicklas3.tst \
      nicklas4.tst nicklas5.tst niki.tst ninestones.tst \
      nngs1.tst nngs2.tst nngs3.tst nngs4.tst \
      nngs.tst optics.tst owl1.tst \
      owl.tst reading.tst \
      rosebud.tst safety.tst score2.tst \
      score.tst semeai.tst \
      strategy2.tst strategy3.tst strategy4.tst strategy5.tst \
      strategy.tst tactics1.tst tactics.tst \
      thrash.tst trevora.tst trevorb.tst trevorc.tst \
      trevord.tst trevor.tst vie.tst viking.tst gifu03.tst seki.tst \
      9x9.tst unconditional.tst cgf2004.tst kgs.tst olympiad2004.tst \
      tiny.tst gifu05.tst 13x13c.tst STS-RV_0.tst STS-RV_1.tst \
      STS-RV_e.tst STS-RV_Misc.tst

noinst_SCRIPTS = eval.sh regress.sh test.sh eval3.sh
EXTRA_DIST = golois games $(TST) $(noinst_SCRIPTS) regress.awk \
             BREAKAGE regress.pl regress.plx regress.pike breakage2tst.py \
	     view.pike benchmark/*gtp regress.cmd


# Remove these files here... they are created locally
DISTCLEANFILES = *.orig *~
all: all-am

.SUFFIXES:
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  regression/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  regression/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
uninstall-info-am:
tags: TAGS
TAGS:

ctags: CTAGS
CTAGS:


distdir: $(DISTFILES)
	$(mkdir_p) $(distdir)/benchmark
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(SCRIPTS)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-generic

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am

.PHONY: all all-am check check-am clean clean-generic distclean \
	distclean-generic distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-exec \
	install-exec-am install-info install-info-am install-man \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-generic pdf pdf-am ps ps-am uninstall uninstall-am \
	uninstall-info-am


check: first_batch

regression: first_batch

test: all_batches

13x13: 13x13.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ $(GG_OPTIONS)

13x13b: 13x13b.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ $(GG_OPTIONS)

arb: arb.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ $(GG_OPTIONS)

arend: arend.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ $(GG_OPTIONS)

arend2: arend2.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ $(GG_OPTIONS)

arion: arion.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ $(GG_OPTIONS)

atari_atari: atari_atari.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ $(GG_OPTIONS)

auto: auto01.tst auto02.tst auto03.tst auto04.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $(srcdir)/auto01.tst $(GG_OPTIONS)
	env RD=$(srcdir) $(srcdir)/eval.sh $(srcdir)/auto02.tst $(GG_OPTIONS)
	env RD=$(srcdir) $(srcdir)/eval.sh $(srcdir)/auto03.tst $(GG_OPTIONS)
	env RD=$(srcdir) $(srcdir)/eval.sh $(srcdir)/auto04.tst $(GG_OPTIONS)

auto_handtalk: auto_handtalk.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^

blunder: blunder.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ $(GG_OPTIONS)

break_in: break_in.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ $(GG_OPTIONS)

buzco: buzco.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ $(GG_OPTIONS)

capture: capture.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^  $(GG_OPTIONS)

century2002: century2002.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^  $(GG_OPTIONS)

connect: connect.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ $(GG_OPTIONS)

connection: connection.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ $(GG_OPTIONS)

dniwog: dniwog.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ $(GG_OPTIONS)

ego: ego.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ $(GG_OPTIONS)

endgame: endgame.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ $(GG_OPTIONS)

filllib: filllib.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ $(GG_OPTIONS)

gifu05: gifu05.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ $(GG_OPTIONS)

golife: golife.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ $(GG_OPTIONS)

global: global.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ $(GG_OPTIONS)

gunnar: gunnar.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ $(GG_OPTIONS)

handtalk: handtalk.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ $(GG_OPTIONS)

heikki: heikki.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ $(GG_OPTIONS)

joseki: joseki.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ $(GG_OPTIONS)

lazarus: lazarus.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ $(GG_OPTIONS)

ld_owl: ld_owl.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ $(GG_OPTIONS)

manyfaces: manyfaces.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ $(GG_OPTIONS)

manyfaces1: manyfaces1.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ $(GG_OPTIONS)

nando: nando.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ $(GG_OPTIONS)

neurogo: neurogo.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ $(GG_OPTIONS)

newscore: newscore.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ $(GG_OPTIONS)

nicklas: nicklas1 nicklas2 nicklas3 nicklas4 nicklas5

nicklas1: nicklas1.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ $(GG_OPTIONS)

nicklas2: nicklas2.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ $(GG_OPTIONS)

nicklas3: nicklas3.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ $(GG_OPTIONS)

nicklas4: nicklas4.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ $(GG_OPTIONS)

nicklas5: nicklas5.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ $(GG_OPTIONS)

niki: niki.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ $(GG_OPTIONS)

ninestones: ninestones.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ $(GG_OPTIONS)

nngs: nngs.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ $(GG_OPTIONS)

nngs1: nngs1.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ $(GG_OPTIONS)

nngs2: nngs2.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ $(GG_OPTIONS)

nngs3: nngs3.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ $(GG_OPTIONS)

nngs4: nngs4.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ $(GG_OPTIONS)

olympiad2004: olympiad2004.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ $(GG_OPTIONS)

optics: optics.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ $(GG_OPTIONS)

owl: owl.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ $(GG_OPTIONS)

owl1: owl1.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ $(GG_OPTIONS)

owl_rotall: owl.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ --gtp-initial-orientation 0 $(GG_OPTIONS)
	env RD=$(srcdir) $(srcdir)/eval.sh $^ --gtp-initial-orientation 1 $(GG_OPTIONS)
	env RD=$(srcdir) $(srcdir)/eval.sh $^ --gtp-initial-orientation 2 $(GG_OPTIONS)
	env RD=$(srcdir) $(srcdir)/eval.sh $^ --gtp-initial-orientation 3 $(GG_OPTIONS)
	env RD=$(srcdir) $(srcdir)/eval.sh $^ --gtp-initial-orientation 4 $(GG_OPTIONS)
	env RD=$(srcdir) $(srcdir)/eval.sh $^ --gtp-initial-orientation 5 $(GG_OPTIONS)
	env RD=$(srcdir) $(srcdir)/eval.sh $^ --gtp-initial-orientation 6 $(GG_OPTIONS)
	env RD=$(srcdir) $(srcdir)/eval.sh $^ --gtp-initial-orientation 7 $(GG_OPTIONS)

reading: reading.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ $(GG_OPTIONS)

rosebud: rosebud.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ $(GG_OPTIONS)

safety: safety.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ $(GG_OPTIONS)

score: score.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ $(GG_OPTIONS)

score2: score2.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ $(GG_OPTIONS)

semeai: semeai.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ $(GG_OPTIONS)

strategy: strategy.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ $(GG_OPTIONS)

strategy2: strategy2.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ $(GG_OPTIONS)

strategy3: strategy3.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ $(GG_OPTIONS)

strategy4: strategy4.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ $(GG_OPTIONS)

strategy5: strategy5.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ $(GG_OPTIONS)

STS-RV_0: STS-RV_0.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ $(GG_OPTIONS)

STS-RV_1: STS-RV_1.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ $(GG_OPTIONS)

STS-RV_e: STS-RV_e.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ $(GG_OPTIONS)

STS-RV_Misc: STS-RV_Misc.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ $(GG_OPTIONS)

tactics: tactics.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ $(GG_OPTIONS)

tactics1: tactics1.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ $(GG_OPTIONS)

thrash: thrash.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ $(GG_OPTIONS)

tiny: tiny.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ $(GG_OPTIONS)

trevor: trevor.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ $(GG_OPTIONS)

trevora: trevora.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ $(GG_OPTIONS)

trevorb: trevorb.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ $(GG_OPTIONS)

trevorc: trevorc.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ $(GG_OPTIONS)

trevord: trevord.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ $(GG_OPTIONS)

viking: viking.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ $(GG_OPTIONS)

vie: vie.tst
	env RD=$(srcdir) $(srcdir)/eval.sh $^ $(GG_OPTIONS)

all_batches: first_batch second_batch third_batch fourth_batch fifth_batch

first_batch: 
	$(srcdir)/regress.sh $(srcdir) reading.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) owl.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) ld_owl.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) optics.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) filllib.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) atari_atari.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) connection.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) break_in.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) blunder.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) unconditional.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) trevora.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) nngs1.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) strategy.tst $(GG_OPTIONS)

second_batch: 
	$(srcdir)/regress.sh $(srcdir) endgame.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) heikki.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) neurogo.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) arb.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) rosebud.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) golife.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) arion.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) viking.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) ego.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) dniwog.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) lazarus.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) trevorb.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) strategy2.tst $(GG_OPTIONS)

third_batch: 
	$(srcdir)/regress.sh $(srcdir) nicklas1.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) nicklas2.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) nicklas3.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) nicklas4.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) nicklas5.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) manyfaces.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) niki.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) trevor.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) tactics.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) buzco.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) nngs.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) trevorc.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) strategy3.tst $(GG_OPTIONS)

fourth_batch: 
	$(srcdir)/regress.sh $(srcdir) capture.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) connect.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) global.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) vie.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) arend.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) 13x13.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) semeai.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) STS-RV_0.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) STS-RV_1.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) STS-RV_e.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) STS-RV_Misc.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) trevord.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) strategy4.tst $(GG_OPTIONS)

fifth_batch:
	$(srcdir)/regress.sh $(srcdir) owl1.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) handtalk.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) nngs2.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) nngs3.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) nngs4.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) strategy5.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) century2002.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) auto01.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) auto02.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) auto03.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) auto04.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) auto_handtalk.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) safety.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) ninestones.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) tactics1.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) manyfaces1.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) gunnar.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) arend2.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) nando.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) thrash.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) 13x13b.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) joseki.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) gifu03.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) seki.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) 9x9.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) cgf2004.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) kgs.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) olympiad2004.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) tiny.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) gifu05.tst $(GG_OPTIONS)
	$(srcdir)/regress.sh $(srcdir) 13x13c.tst $(GG_OPTIONS)
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
